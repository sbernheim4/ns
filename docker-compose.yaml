services:

  # client:
  #   build: ./client
  #   env_file: ".env"
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./client:/app
  #     - ./client/node_modules:/app/node_modules

  server:
    build: ./server
    volumes:
      - ./server:/code/app
    depends_on:
      db:
        condition: service_healthy
        restart: true
    env_file: ".env"
    ports:
      - "80:8000"

  db:
    image: postgres
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file: ".env"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  flyway:
    image: flyway/flyway
    command: -url=jdbc:postgresql://db:5432/mydatabase -user=root -password=root migrate
    volumes:
      - ./db/migrations:/flyway/sql
    depends_on:
      db:
        condition: service_healthy

  graphql:
    container_name: forum-example-graphql
    restart: always
    image: forum-example-graphql
    build:
        context: ./graphql
    env_file:
        - ./.env
    depends_on:
        - db
    networks:
        - network
    ports:
        - 5433:5433
    command: ["--connection", "${DATABASE_URL}", "--port", "5433", "--schema", "public", "--append-plugins", "postgraphile-plugin-connection-filter"]

networks:
  network:

volumes:
  db:
